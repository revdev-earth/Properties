model Economy {
    id         String   @id @default(uuid())
    propertyId String   @unique
    property   Property @relation(fields: [propertyId], references: [id])

    transactions Transaction[]

    annualBudget     Float
    accumulatedCosts Float
    costDistribution String? // Cost distribution rules (e.g., "70% owner, 30% tenant")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Transaction {
    id        String   @id @default(uuid())
    economyId String?
    economy   Economy? @relation(fields: [economyId], references: [id])

    maintenanceId      String? // Optional: Relationship with a maintenance record
    relatedMaintenance Maintenance? @relation(fields: [maintenanceId], references: [id])
    TenantId           String? // Optional: Relationship with a Tenant record
    Tenant             Tenant?      @relation(fields: [TenantId], references: [id])
    serviceId          String?
    Service            Service?     @relation(fields: [serviceId], references: [id])

    type        String // Type: "expense" or "income"
    description String // Description of the transaction
    category    String? // Category: "maintenance", "improvement", "legal", etc.

    // Billing and Payment Details
    dueDate       DateTime // Payment due date
    paymentStatus String // Status (e.g., paid, pending, in process)
    averageAmount Float? // Average monthly or bi-monthly amount

    // payments
    paymentDate  DateTime
    amount       Float
    paymentNotes String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
